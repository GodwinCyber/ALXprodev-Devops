#!/bin/bash

# Fetch Pokémon data from the PokéAPI and store each Pokémon's data in separate JSON files.
# Adds a delay between requests to handle potential rate limits.

# List of Pokémon
pokemons=("bulbasaur" "ivysaur" "venusaur" "charmander" "charmeleon")

# API base URL
base_url="https://pokeapi.co/api/v2/pokemon/"

# Directory to store Pokémon data
output_dir="pokemon_data"
mkdir -p "$output_dir"

# Clear previous errors
> errors.txt

# Loop through each Pokémon in the list
for pokemon in "${pokemons[@]}"; do
    echo "Fetching data for $pokemon..."

    pokemon_lower=$(echo "$pokemon" | tr '[:upper:]' '[:lower:]')

    # File path
    file_path="$output_dir/${pokemon}.json"

    # Make API request and save response
    curl -s -o "$file_path" "${base_url}${pokemon_lower}"

    # Validate JSON
    if jq empty "$file_path" > /dev/null 2>&1; then
        echo "Successfully saved ${pokemon}.json"
    else
        echo "Failed to fetch valid data for $pokemon" >> errors.txt
        rm "$file_path"  # Remove invalid file
    fi

    # Delay to avoid rate-limiting
    sleep 2
done

echo "All Pokémon data fetched successfully."
